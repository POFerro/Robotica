//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProductAttribute("ArduinoGenericDrive")]
[assembly: global::System.Reflection.AssemblyTitleAttribute("ArduinoGenericDrive")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Proxy, SourceAssemblyKey="ArduinoGenericDrive.Y2013.M03, Version=1.0.0.0, Culture=neutral, PublicKeyToken=e" +
    "3a6d1d8ea7297f8")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace POFerro.Robotics.ArduinoGenericDrive.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.pferro/2013/03/arduinogenericdrive.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.pferro/2013/03/arduinogenericdrive.html", ElementName="ArduinoGenericDriveState")]
    public class ArduinoGenericDriveState : global::Microsoft.Robotics.Services.Drive.Proxy.DriveDifferentialTwoWheelState, global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public ArduinoGenericDriveState() {
        }
        
        private global::POFerro.Robotics.ArduinoGenericDrive.Proxy.MotorShieldTypeEnum _MotorShieldType;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::POFerro.Robotics.ArduinoGenericDrive.Proxy.MotorShieldTypeEnum MotorShieldType {
            get {
                return this._MotorShieldType;
            }
            set {
                this._MotorShieldType = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _RightForwardPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins RightForwardPin {
            get {
                return this._RightForwardPin;
            }
            set {
                this._RightForwardPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _RightBackwardPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins RightBackwardPin {
            get {
                return this._RightBackwardPin;
            }
            set {
                this._RightBackwardPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _LeftForwardPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins LeftForwardPin {
            get {
                return this._LeftForwardPin;
            }
            set {
                this._LeftForwardPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _LeftBackwardPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins LeftBackwardPin {
            get {
                return this._LeftBackwardPin;
            }
            set {
                this._LeftBackwardPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _LeftEngineDirPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins LeftEngineDirPin {
            get {
                return this._LeftEngineDirPin;
            }
            set {
                this._LeftEngineDirPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _LeftEngineBreakPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins LeftEngineBreakPin {
            get {
                return this._LeftEngineBreakPin;
            }
            set {
                this._LeftEngineBreakPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _LeftEnginePWMPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins LeftEnginePWMPin {
            get {
                return this._LeftEnginePWMPin;
            }
            set {
                this._LeftEnginePWMPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _LeftEngineCurrentSensor;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins LeftEngineCurrentSensor {
            get {
                return this._LeftEngineCurrentSensor;
            }
            set {
                this._LeftEngineCurrentSensor = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _RightEngineDirPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins RightEngineDirPin {
            get {
                return this._RightEngineDirPin;
            }
            set {
                this._RightEngineDirPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _RightEngineBreakPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins RightEngineBreakPin {
            get {
                return this._RightEngineBreakPin;
            }
            set {
                this._RightEngineBreakPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _RightEnginePWMPin;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins RightEnginePWMPin {
            get {
                return this._RightEnginePWMPin;
            }
            set {
                this._RightEnginePWMPin = value;
            }
        }
        
        private global::Arduino.Firmata.Types.Proxy.Pins _RightEngineCurrentSensor;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Arduino.Firmata.Types.Proxy.Pins RightEngineCurrentSensor {
            get {
                return this._RightEngineCurrentSensor;
            }
            set {
                this._RightEngineCurrentSensor = value;
            }
        }
        
        private int _MillisecondsPerAngle;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::System.ComponentModel.DescriptionAttribute("Rotation time ms/degree  (16 on carpet and 8 on wooden floor)")]
        public int MillisecondsPerAngle {
            get {
                return this._MillisecondsPerAngle;
            }
            set {
                this._MillisecondsPerAngle = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current ArduinoGenericDriveState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public override void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            base.CopyTo(target);
            global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState typedTarget = ((global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState)(target));
            typedTarget._MotorShieldType = this._MotorShieldType;
            typedTarget._RightForwardPin = this._RightForwardPin;
            typedTarget._RightBackwardPin = this._RightBackwardPin;
            typedTarget._LeftForwardPin = this._LeftForwardPin;
            typedTarget._LeftBackwardPin = this._LeftBackwardPin;
            typedTarget._LeftEngineDirPin = this._LeftEngineDirPin;
            typedTarget._LeftEngineBreakPin = this._LeftEngineBreakPin;
            typedTarget._LeftEnginePWMPin = this._LeftEnginePWMPin;
            typedTarget._LeftEngineCurrentSensor = this._LeftEngineCurrentSensor;
            typedTarget._RightEngineDirPin = this._RightEngineDirPin;
            typedTarget._RightEngineBreakPin = this._RightEngineBreakPin;
            typedTarget._RightEnginePWMPin = this._RightEnginePWMPin;
            typedTarget._RightEngineCurrentSensor = this._RightEngineCurrentSensor;
            typedTarget._MillisecondsPerAngle = this._MillisecondsPerAngle;
        }
        
        /// <summary>
        ///Clones ArduinoGenericDriveState
        ///</summary>
        ///<returns>cloned value</returns>
        public override object Clone() {
            global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState target0 = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current ArduinoGenericDriveState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public override void Serialize(System.IO.BinaryWriter writer) {
            base.Serialize(writer);
            writer.Write(((int)(this._MotorShieldType)));
            writer.Write(((int)(this._RightForwardPin)));
            writer.Write(((int)(this._RightBackwardPin)));
            writer.Write(((int)(this._LeftForwardPin)));
            writer.Write(((int)(this._LeftBackwardPin)));
            writer.Write(((int)(this._LeftEngineDirPin)));
            writer.Write(((int)(this._LeftEngineBreakPin)));
            writer.Write(((int)(this._LeftEnginePWMPin)));
            writer.Write(((int)(this._LeftEngineCurrentSensor)));
            writer.Write(((int)(this._RightEngineDirPin)));
            writer.Write(((int)(this._RightEngineBreakPin)));
            writer.Write(((int)(this._RightEnginePWMPin)));
            writer.Write(((int)(this._RightEngineCurrentSensor)));
            writer.Write(this._MillisecondsPerAngle);
        }
        
        /// <summary>
        ///Deserializes ArduinoGenericDriveState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized ArduinoGenericDriveState</returns>
        public override object Deserialize(System.IO.BinaryReader reader) {
            base.Deserialize(reader);
            this._MotorShieldType = ((global::POFerro.Robotics.ArduinoGenericDrive.Proxy.MotorShieldTypeEnum)(reader.ReadInt32()));
            this._RightForwardPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._RightBackwardPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._LeftForwardPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._LeftBackwardPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._LeftEngineDirPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._LeftEngineBreakPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._LeftEnginePWMPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._LeftEngineCurrentSensor = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._RightEngineDirPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._RightEngineBreakPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._RightEnginePWMPin = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._RightEngineCurrentSensor = ((global::Arduino.Firmata.Types.Proxy.Pins)(reader.ReadInt32()));
            this._MillisecondsPerAngle = reader.ReadInt32();
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Get : global::Microsoft.Dss.ServiceModel.Dssp.Get<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState, global:: W3C.Soap.Fault>> {
        
        public Get() {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Subscribe : global::Microsoft.Dss.ServiceModel.Dssp.Subscribe<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault>> {
        
        public Subscribe() {
        }
        
        public Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body) : 
                base(body) {
        }
        
        public Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class ArduinoGenericDriveOperations : global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup, global:: Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop, global:: POFerro.Robotics.ArduinoGenericDrive.Proxy.Get, global:: POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe> {
        
        public ArduinoGenericDriveOperations() {
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup() {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop() {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState, global:: W3C.Soap.Fault> Get() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(out global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveState, global:: W3C.Soap.Fault> Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault> Subscribe(global::Microsoft.Ccr.Core.IPort notificationPort, params System.Type[] types) {
            global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Subscribe(global::Microsoft.Ccr.Core.IPort notificationPort, out global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe operation, params System.Type[] types) {
            global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault> Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.IPort notificationPort, params System.Type[] types) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            }
            global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.IPort notificationPort, out global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe operation, params System.Type[] types) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            }
            operation = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.pferro/2013/03/arduinogenericdrive.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.pferro/2013/03/arduinogenericdrive.html", ElementName="MotorShieldTypeEnum")]
    public enum MotorShieldTypeEnum : int {
        
        ArduinoShield = 0,
        
        Keyes = 1,
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("Arduino Generic Drive service (no description provided)")]
    [global::System.ComponentModel.DisplayNameAttribute("Arduino Generic Drive")]
    public class Contract {
        
        public const string Identifier = "http://schemas.pferro/2013/03/arduinogenericdrive.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/2013/03/arduinogenericdrive.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/2013/03/arduinogenericdrive.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.ArduinoGenericDriveOperations = new global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveOperations();
            this.DriveOperations = new global::Microsoft.Robotics.Services.Drive.Proxy.DriveOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.ArduinoGenericDriveOperations, "http://schemas.pferro/2013/03/arduinogenericdrive.html", "ArduinoGenericDriveOperations", ""), new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.DriveOperations, "http://schemas.microsoft.com/robotics/2006/05/drive.html", "DriveOperations", null));
        }
        
        public global::POFerro.Robotics.ArduinoGenericDrive.Proxy.ArduinoGenericDriveOperations ArduinoGenericDriveOperations;
        
        public global::Microsoft.Robotics.Services.Drive.Proxy.DriveOperations DriveOperations;
    }
}
