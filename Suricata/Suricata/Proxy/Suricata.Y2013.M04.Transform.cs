//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProductAttribute("Suricata")]
[assembly: global::System.Reflection.AssemblyTitleAttribute("Suricata")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="Suricata.Y2013.M04, Version=1.0.0.0, Culture=neutral, PublicKeyToken=e3a6d1d8ea72" +
    "97f8")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformSuricata {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::POFerro.Robotics.Suricata.Proxy.SuricataState), new global::Microsoft.Dss.Core.Attributes.Transform(POFerro_Robotics_Suricata_Proxy_SuricataState_TO_POFerro_Robotics_Suricata_SuricataState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::POFerro.Robotics.Suricata.SuricataState), new global::Microsoft.Dss.Core.Attributes.Transform(POFerro_Robotics_Suricata_SuricataState_TO_POFerro_Robotics_Suricata_Proxy_SuricataState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState), new global::Microsoft.Dss.Core.Attributes.Transform(POFerro_Robotics_Suricata_SuricataIRArray_Proxy_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataIRArray_SuricataIRArrayState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::POFerro.Robotics.Suricata.SuricataIRArray.SuricataIRArrayState), new global::Microsoft.Dss.Core.Attributes.Transform(POFerro_Robotics_Suricata_SuricataIRArray_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataIRArray_Proxy_SuricataIRArrayState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState), new global::Microsoft.Dss.Core.Attributes.Transform(POFerro_Robotics_Suricata_SuricataSonarArray_Proxy_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataSonarArray_SuricataIRArrayState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::POFerro.Robotics.Suricata.SuricataSonarArray.SuricataIRArrayState), new global::Microsoft.Dss.Core.Attributes.Transform(POFerro_Robotics_Suricata_SuricataSonarArray_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataSonarArray_Proxy_SuricataIRArrayState));
        }
        
        public static object POFerro_Robotics_Suricata_Proxy_SuricataState_TO_POFerro_Robotics_Suricata_SuricataState(object transformFrom) {
            global::POFerro.Robotics.Suricata.SuricataState target = new global::POFerro.Robotics.Suricata.SuricataState();
            global::POFerro.Robotics.Suricata.Proxy.SuricataState from = ((global::POFerro.Robotics.Suricata.Proxy.SuricataState)(transformFrom));
            target.CurrentState = ((global::POFerro.Robotics.Suricata.SuricataLogicalState)(((int)(from.CurrentState))));
            if ((from.LastRightSonarReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.LastRightSonarReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.LastRightSonarReading = tmp;
            }
            else {
                target.LastRightSonarReading = null;
            }
            if ((from.LastLeftSonarReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp0 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.LastLeftSonarReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.LastLeftSonarReading = tmp0;
            }
            else {
                target.LastLeftSonarReading = null;
            }
            if ((from.LastCenterIRReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp1 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.LastCenterIRReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp1)));
                target.LastCenterIRReading = tmp1;
            }
            else {
                target.LastCenterIRReading = null;
            }
            if ((from.LastLeftIRReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp2 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.LastLeftIRReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.LastLeftIRReading = tmp2;
            }
            else {
                target.LastLeftIRReading = null;
            }
            if ((from.LastRightIRReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp3 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.LastRightIRReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp3)));
                target.LastRightIRReading = tmp3;
            }
            else {
                target.LastRightIRReading = null;
            }
            target.LeftWheelPower = from.LeftWheelPower;
            target.RightWheelPower = from.RightWheelPower;
            return target;
        }
        
        public static object POFerro_Robotics_Suricata_SuricataState_TO_POFerro_Robotics_Suricata_Proxy_SuricataState(object transformFrom) {
            global::POFerro.Robotics.Suricata.Proxy.SuricataState target = new global::POFerro.Robotics.Suricata.Proxy.SuricataState();
            global::POFerro.Robotics.Suricata.SuricataState from = ((global::POFerro.Robotics.Suricata.SuricataState)(transformFrom));
            target.CurrentState = ((global::POFerro.Robotics.Suricata.Proxy.SuricataLogicalState)(((int)(from.CurrentState))));
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp = from.LastRightSonarReading;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp0 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.LastRightSonarReading = tmp0;
            }
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp1 = from.LastLeftSonarReading;
            if ((tmp1 != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp2 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp1)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.LastLeftSonarReading = tmp2;
            }
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp3 = from.LastCenterIRReading;
            if ((tmp3 != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp4 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp3)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp4)));
                target.LastCenterIRReading = tmp4;
            }
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp5 = from.LastLeftIRReading;
            if ((tmp5 != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp6 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp5)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp6)));
                target.LastLeftIRReading = tmp6;
            }
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp7 = from.LastRightIRReading;
            if ((tmp7 != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp8 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp7)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp8)));
                target.LastRightIRReading = tmp8;
            }
            target.LeftWheelPower = from.LeftWheelPower;
            target.RightWheelPower = from.RightWheelPower;
            return target;
        }
        
        public static object POFerro_Robotics_Suricata_SuricataIRArray_Proxy_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataIRArray_SuricataIRArrayState(object transformFrom) {
            global::POFerro.Robotics.Suricata.SuricataIRArray.SuricataIRArrayState target = new global::POFerro.Robotics.Suricata.SuricataIRArray.SuricataIRArrayState();
            global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState from = ((global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState)(transformFrom));
            if ((from.FrontLeftIRState != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.FrontLeftIRState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.FrontLeftIRState = tmp;
            }
            else {
                target.FrontLeftIRState = null;
            }
            if ((from.FrontMiddleIRState != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp0 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.FrontMiddleIRState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.FrontMiddleIRState = tmp0;
            }
            else {
                target.FrontMiddleIRState = null;
            }
            if ((from.FrontRightIRState != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp1 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.FrontRightIRState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp1)));
                target.FrontRightIRState = tmp1;
            }
            else {
                target.FrontRightIRState = null;
            }
            return target;
        }
        
        public static object POFerro_Robotics_Suricata_SuricataIRArray_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataIRArray_Proxy_SuricataIRArrayState(object transformFrom) {
            global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState target = new global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState();
            global::POFerro.Robotics.Suricata.SuricataIRArray.SuricataIRArrayState from = ((global::POFerro.Robotics.Suricata.SuricataIRArray.SuricataIRArrayState)(transformFrom));
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp = from.FrontLeftIRState;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp0 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.FrontLeftIRState = tmp0;
            }
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp1 = from.FrontMiddleIRState;
            if ((tmp1 != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp2 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp1)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.FrontMiddleIRState = tmp2;
            }
            global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp3 = from.FrontRightIRState;
            if ((tmp3 != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp4 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp3)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp4)));
                target.FrontRightIRState = tmp4;
            }
            return target;
        }
        
        public static object POFerro_Robotics_Suricata_SuricataSonarArray_Proxy_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataSonarArray_SuricataIRArrayState(object transformFrom) {
            global::POFerro.Robotics.Suricata.SuricataSonarArray.SuricataIRArrayState target = new global::POFerro.Robotics.Suricata.SuricataSonarArray.SuricataIRArrayState();
            global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState from = ((global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState)(transformFrom));
            if ((from.SonarLeftState != null)) {
                global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp = new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.SonarLeftState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.SonarLeftState = tmp;
            }
            else {
                target.SonarLeftState = null;
            }
            if ((from.SonarRightState != null)) {
                global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp0 = new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.SonarRightState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.SonarRightState = tmp0;
            }
            else {
                target.SonarRightState = null;
            }
            return target;
        }
        
        public static object POFerro_Robotics_Suricata_SuricataSonarArray_SuricataIRArrayState_TO_POFerro_Robotics_Suricata_SuricataSonarArray_Proxy_SuricataIRArrayState(object transformFrom) {
            global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState target = new global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState();
            global::POFerro.Robotics.Suricata.SuricataSonarArray.SuricataIRArrayState from = ((global::POFerro.Robotics.Suricata.SuricataSonarArray.SuricataIRArrayState)(transformFrom));
            global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp = from.SonarLeftState;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp0 = new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.SonarLeftState = tmp0;
            }
            global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp1 = from.SonarRightState;
            if ((tmp1 != null)) {
                global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp2 = new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp1)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.SonarRightState = tmp2;
            }
            return target;
        }
    }
}
