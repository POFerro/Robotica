//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProductAttribute("Suricata")]
[assembly: global::System.Reflection.AssemblyTitleAttribute("Suricata")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Proxy, SourceAssemblyKey="Suricata.Y2013.M04, Version=1.0.0.0, Culture=neutral, PublicKeyToken=e3a6d1d8ea72" +
    "97f8")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace POFerro.Robotics.Suricata.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.pferro/2013/04/suricata.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.pferro/2013/04/suricata.html", ElementName="SuricataState")]
    public class SuricataState : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SuricataState() {
        }
        
        private global::POFerro.Robotics.Suricata.Proxy.SuricataLogicalState _CurrentState;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::POFerro.Robotics.Suricata.Proxy.SuricataLogicalState CurrentState {
            get {
                return this._CurrentState;
            }
            set {
                this._CurrentState = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _LastRightSonarReading;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState LastRightSonarReading {
            get {
                return this._LastRightSonarReading;
            }
            set {
                this._LastRightSonarReading = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _LastLeftSonarReading;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState LastLeftSonarReading {
            get {
                return this._LastLeftSonarReading;
            }
            set {
                this._LastLeftSonarReading = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _LastCenterIRReading;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState LastCenterIRReading {
            get {
                return this._LastCenterIRReading;
            }
            set {
                this._LastCenterIRReading = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _LastLeftIRReading;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState LastLeftIRReading {
            get {
                return this._LastLeftIRReading;
            }
            set {
                this._LastLeftIRReading = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _LastRightIRReading;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState LastRightIRReading {
            get {
                return this._LastRightIRReading;
            }
            set {
                this._LastRightIRReading = value;
            }
        }
        
        private double _LeftWheelPower;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public double LeftWheelPower {
            get {
                return this._LeftWheelPower;
            }
            set {
                this._LeftWheelPower = value;
            }
        }
        
        private double _RightWheelPower;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public double RightWheelPower {
            get {
                return this._RightWheelPower;
            }
            set {
                this._RightWheelPower = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SuricataState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::POFerro.Robotics.Suricata.Proxy.SuricataState typedTarget = ((global::POFerro.Robotics.Suricata.Proxy.SuricataState)(target));
            typedTarget._CurrentState = this._CurrentState;
            if ((this._LastRightSonarReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastRightSonarReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                typedTarget._LastRightSonarReading = tmp;
            }
            if ((this._LastLeftSonarReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp0 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastLeftSonarReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                typedTarget._LastLeftSonarReading = tmp0;
            }
            if ((this._LastCenterIRReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp1 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastCenterIRReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp1)));
                typedTarget._LastCenterIRReading = tmp1;
            }
            if ((this._LastLeftIRReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp2 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastLeftIRReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                typedTarget._LastLeftIRReading = tmp2;
            }
            if ((this._LastRightIRReading != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp3 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastRightIRReading)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp3)));
                typedTarget._LastRightIRReading = tmp3;
            }
            typedTarget._LeftWheelPower = this._LeftWheelPower;
            typedTarget._RightWheelPower = this._RightWheelPower;
        }
        
        /// <summary>
        ///Clones SuricataState
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::POFerro.Robotics.Suricata.Proxy.SuricataState target0 = new global::POFerro.Robotics.Suricata.Proxy.SuricataState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SuricataState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            writer.Write(((int)(this._CurrentState)));
            if ((this._LastRightSonarReading == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastRightSonarReading)).Serialize(writer);
            }
            if ((this._LastLeftSonarReading == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastLeftSonarReading)).Serialize(writer);
            }
            if ((this._LastCenterIRReading == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastCenterIRReading)).Serialize(writer);
            }
            if ((this._LastLeftIRReading == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastLeftIRReading)).Serialize(writer);
            }
            if ((this._LastRightIRReading == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._LastRightIRReading)).Serialize(writer);
            }
            writer.Write(this._LeftWheelPower);
            writer.Write(this._RightWheelPower);
        }
        
        /// <summary>
        ///Deserializes SuricataState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SuricataState</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._CurrentState = ((global::POFerro.Robotics.Suricata.Proxy.SuricataLogicalState)(reader.ReadInt32()));
            if ((reader.ReadByte() != 0)) {
                this._LastRightSonarReading = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            if ((reader.ReadByte() != 0)) {
                this._LastLeftSonarReading = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            if ((reader.ReadByte() != 0)) {
                this._LastCenterIRReading = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            if ((reader.ReadByte() != 0)) {
                this._LastLeftIRReading = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            if ((reader.ReadByte() != 0)) {
                this._LastRightIRReading = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            this._LeftWheelPower = reader.ReadDouble();
            this._RightWheelPower = reader.ReadDouble();
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Get : global::Microsoft.Dss.ServiceModel.Dssp.Get<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.Suricata.Proxy.SuricataState, global:: W3C.Soap.Fault>> {
        
        public Get() {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.Suricata.Proxy.SuricataState, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class StateChangeNotify : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::POFerro.Robotics.Suricata.Proxy.SuricataState, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault>> {
        
        public StateChangeNotify() {
        }
        
        public StateChangeNotify(global::POFerro.Robotics.Suricata.Proxy.SuricataState body) : 
                base(body) {
        }
        
        public StateChangeNotify(global::POFerro.Robotics.Suricata.Proxy.SuricataState body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Subscribe : global::Microsoft.Dss.ServiceModel.Dssp.Subscribe<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault>> {
        
        public Subscribe() {
        }
        
        public Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body) : 
                base(body) {
        }
        
        public Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class SuricataOperations : global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup, global:: Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop, global:: POFerro.Robotics.Suricata.Proxy.Get, global:: POFerro.Robotics.Suricata.Proxy.StateChangeNotify, global:: POFerro.Robotics.Suricata.Proxy.Subscribe> {
        
        public SuricataOperations() {
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup() {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop() {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.Suricata.Proxy.SuricataState, global:: W3C.Soap.Fault> Get() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::POFerro.Robotics.Suricata.Proxy.Get operation = new global::POFerro.Robotics.Suricata.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(out global::POFerro.Robotics.Suricata.Proxy.Get operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::POFerro.Robotics.Suricata.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::POFerro.Robotics.Suricata.Proxy.SuricataState, global:: W3C.Soap.Fault> Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::POFerro.Robotics.Suricata.Proxy.Get operation = new global::POFerro.Robotics.Suricata.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::POFerro.Robotics.Suricata.Proxy.Get operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::POFerro.Robotics.Suricata.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> StateChangeNotify() {
            global::POFerro.Robotics.Suricata.Proxy.SuricataState body = new global::POFerro.Robotics.Suricata.Proxy.SuricataState();
            global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify operation = new global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice StateChangeNotify(out global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify operation) {
            global::POFerro.Robotics.Suricata.Proxy.SuricataState body = new global::POFerro.Robotics.Suricata.Proxy.SuricataState();
            operation = new global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> StateChangeNotify(global::POFerro.Robotics.Suricata.Proxy.SuricataState body) {
            if ((body == null)) {
                body = new global::POFerro.Robotics.Suricata.Proxy.SuricataState();
            }
            global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify operation = new global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice StateChangeNotify(global::POFerro.Robotics.Suricata.Proxy.SuricataState body, out global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify operation) {
            if ((body == null)) {
                body = new global::POFerro.Robotics.Suricata.Proxy.SuricataState();
            }
            operation = new global::POFerro.Robotics.Suricata.Proxy.StateChangeNotify(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault> Subscribe(global::Microsoft.Ccr.Core.IPort notificationPort, params System.Type[] types) {
            global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            global::POFerro.Robotics.Suricata.Proxy.Subscribe operation = new global::POFerro.Robotics.Suricata.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Subscribe(global::Microsoft.Ccr.Core.IPort notificationPort, out global::POFerro.Robotics.Suricata.Proxy.Subscribe operation, params System.Type[] types) {
            global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            operation = new global::POFerro.Robotics.Suricata.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType, global:: W3C.Soap.Fault> Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.IPort notificationPort, params System.Type[] types) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            }
            global::POFerro.Robotics.Suricata.Proxy.Subscribe operation = new global::POFerro.Robotics.Suricata.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.IPort notificationPort, out global::POFerro.Robotics.Suricata.Proxy.Subscribe operation, params System.Type[] types) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            }
            operation = new global::POFerro.Robotics.Suricata.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.pferro/2013/04/suricata.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.pferro/2013/04/suricata.html", ElementName="SuricataLogicalState")]
    public enum SuricataLogicalState : int {
        
        Unknown = 0,
        
        FollowingShepherd = 1,
        
        FollowingSound = 2,
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("Suricata service (no description provided)")]
    [global::System.ComponentModel.DisplayNameAttribute("Suricata")]
    public class Contract {
        
        public const string Identifier = "http://schemas.pferro/2013/04/suricata.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/2013/04/suricata.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/2013/04/suricata.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.SuricataOperations = new global::POFerro.Robotics.Suricata.Proxy.SuricataOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.SuricataOperations, "http://schemas.pferro/2013/04/suricata.html", "SuricataOperations", ""));
        }
        
        public global::POFerro.Robotics.Suricata.Proxy.SuricataOperations SuricataOperations;
    }
}
namespace POFerro.Robotics.Suricata.SuricataIRArray.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.pferro/robotics/2013/04/suricatairarray.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.pferro/robotics/2013/04/suricatairarray.html", ElementName="SuricataIRArrayState")]
    public class SuricataIRArrayState : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SuricataIRArrayState() {
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _FrontLeftIRState;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState FrontLeftIRState {
            get {
                return this._FrontLeftIRState;
            }
            set {
                this._FrontLeftIRState = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _FrontMiddleIRState;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState FrontMiddleIRState {
            get {
                return this._FrontMiddleIRState;
            }
            set {
                this._FrontMiddleIRState = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState _FrontRightIRState;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState FrontRightIRState {
            get {
                return this._FrontRightIRState;
            }
            set {
                this._FrontRightIRState = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SuricataIRArrayState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState typedTarget = ((global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState)(target));
            if ((this._FrontLeftIRState != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._FrontLeftIRState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                typedTarget._FrontLeftIRState = tmp;
            }
            if ((this._FrontMiddleIRState != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp0 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._FrontMiddleIRState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                typedTarget._FrontMiddleIRState = tmp0;
            }
            if ((this._FrontRightIRState != null)) {
                global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState tmp1 = new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._FrontRightIRState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp1)));
                typedTarget._FrontRightIRState = tmp1;
            }
        }
        
        /// <summary>
        ///Clones SuricataIRArrayState
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState target0 = new global::POFerro.Robotics.Suricata.SuricataIRArray.Proxy.SuricataIRArrayState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SuricataIRArrayState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._FrontLeftIRState == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._FrontLeftIRState)).Serialize(writer);
            }
            if ((this._FrontMiddleIRState == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._FrontMiddleIRState)).Serialize(writer);
            }
            if ((this._FrontRightIRState == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._FrontRightIRState)).Serialize(writer);
            }
        }
        
        /// <summary>
        ///Deserializes SuricataIRArrayState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SuricataIRArrayState</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._FrontLeftIRState = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            if ((reader.ReadByte() != 0)) {
                this._FrontMiddleIRState = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            if ((reader.ReadByte() != 0)) {
                this._FrontRightIRState = ((global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.AnalogSensor.Proxy.AnalogSensorState())).Deserialize(reader)));
            }
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("Infra-vermelhos da Suricata")]
    [global::System.ComponentModel.DisplayNameAttribute("SuricataIRArray")]
    public class Contract {
        
        public const string Identifier = "http://schemas.pferro/robotics/2013/04/suricatairarray.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/robotics/2013/04/suricatairarray.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/robotics/2013/04/suricatairarray.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.AnalogSensorOperations = new global::Microsoft.Robotics.Services.AnalogSensorArray.Proxy.AnalogSensorOperations();
            this.InfraredSensorOperations = new global::Microsoft.Robotics.Services.InfraredSensorArray.Proxy.InfraredSensorOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.AnalogSensorOperations, "http://schemas.pferro/robotics/2013/04/suricatairarray.html", "AnalogSensorOperations", ""), new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.InfraredSensorOperations, "http://schemas.microsoft.com/robotics/2011/10/infraredsensorarray.html", "InfraredSensorOperations", "/suricatairarray"));
        }
        
        public global::Microsoft.Robotics.Services.AnalogSensorArray.Proxy.AnalogSensorOperations AnalogSensorOperations;
        
        public global::Microsoft.Robotics.Services.InfraredSensorArray.Proxy.InfraredSensorOperations InfraredSensorOperations;
    }
}
namespace POFerro.Robotics.Suricata.SuricataSonarArray.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.pferro/robotics/2013/04/suricatasonararray.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.pferro/robotics/2013/04/suricatasonararray.html", ElementName="SuricataIRArrayState")]
    public class SuricataIRArrayState : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SuricataIRArrayState() {
        }
        
        private global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState _SonarLeftState;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState SonarLeftState {
            get {
                return this._SonarLeftState;
            }
            set {
                this._SonarLeftState = value;
            }
        }
        
        private global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState _SonarRightState;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState SonarRightState {
            get {
                return this._SonarRightState;
            }
            set {
                this._SonarRightState = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SuricataIRArrayState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState typedTarget = ((global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState)(target));
            if ((this._SonarLeftState != null)) {
                global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp = new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._SonarLeftState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                typedTarget._SonarLeftState = tmp;
            }
            if ((this._SonarRightState != null)) {
                global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState tmp0 = new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState();
                ((Microsoft.Dss.Core.IDssSerializable)(this._SonarRightState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                typedTarget._SonarRightState = tmp0;
            }
        }
        
        /// <summary>
        ///Clones SuricataIRArrayState
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState target0 = new global::POFerro.Robotics.Suricata.SuricataSonarArray.Proxy.SuricataIRArrayState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SuricataIRArrayState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._SonarLeftState == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._SonarLeftState)).Serialize(writer);
            }
            if ((this._SonarRightState == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._SonarRightState)).Serialize(writer);
            }
        }
        
        /// <summary>
        ///Deserializes SuricataIRArrayState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SuricataIRArrayState</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._SonarLeftState = ((global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState())).Deserialize(reader)));
            }
            if ((reader.ReadByte() != 0)) {
                this._SonarRightState = ((global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Robotics.Services.Sonar.Proxy.SonarState())).Deserialize(reader)));
            }
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("Sonares da Suricata")]
    [global::System.ComponentModel.DisplayNameAttribute("SuricataSonarArray")]
    public class Contract {
        
        public const string Identifier = "http://schemas.pferro/robotics/2013/04/suricatasonararray.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/robotics/2013/04/suricatasonararray.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.pferro/robotics/2013/04/suricatasonararray.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.AnalogSensorOperations = new global::Microsoft.Robotics.Services.AnalogSensorArray.Proxy.AnalogSensorOperations();
            this.SonarSensorOperations = new global::Microsoft.Robotics.Services.SonarSensorArray.Proxy.SonarSensorOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.AnalogSensorOperations, "http://schemas.pferro/robotics/2013/04/suricatasonararray.html", "AnalogSensorOperations", ""), new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.SonarSensorOperations, "http://schemas.microsoft.com/robotics/2011/09/sonarsensorarray.html", "SonarSensorOperations", "/suricatasonararray"));
        }
        
        public global::Microsoft.Robotics.Services.AnalogSensorArray.Proxy.AnalogSensorOperations AnalogSensorOperations;
        
        public global::Microsoft.Robotics.Services.SonarSensorArray.Proxy.SonarSensorOperations SonarSensorOperations;
    }
}
